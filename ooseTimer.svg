<?xml version="1.0"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "../../svg11-flat.dtd">
<svg
	version="1.1"
	xmlns="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	width="100%"
	height="100%"
	id="timer"
	viewBox="-3 -3 106 106"
	shape-rendering="geometricPrecision"   
	onload='Init(evt)' onclick='startTimer(evt)' >
	<title>oose Timer</title>
	<description>Autor: Axel Scheithauer, November 2011</description>
   <script><![CDATA[
      var SVGDocument = null;
      var SVGRoot = null;
	  var Time=60;

	  function getUrlVariable(myvariable, defaultvalue) {  
		  var query = window.location.search.substring(1);  
		  var vars = query.split("&");  
		  for (var i=0;i<vars.length;i++) {  
				var pair = vars[i].split("=");  
				if (pair[0] == myvariable) 
				   return decodeURIComponent(pair[1]);  
		  }   
		  return defaultvalue  
		}  
		
		function Init(evt)      {
         SVGDocument = evt.target.ownerDocument;
         SVGRoot = SVGDocument.documentElement;
		 Time = Number(getUrlVariable('t','0'));
		 startTimer();
		};
		
		function startTimer() {SVGRoot.setCurrentTime( (60-Time)*60 );}

		function startTimerOn(evt){
			if (!evt.target.firstChild.nodeValue) {return};
			Time = Number(evt.target.firstChild.nodeValue);
			if (Time==0) {Time=60;};
			startTimer();
		}
		function startTimerOn1(evt){
			if (!evt.target.parentNode.parentNode.lastChild.nodeValue) {return};
			Time = Number(evt.target.parentNode.parentNode.lastChild.nodeValue)+
			       Number(evt.target.parentNode.parentNode.parentNode.parentNode.lastChild.nodeValue)+
			       Number(evt.target.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.lastChild.nodeValue);
			if (Time==0) {Time=60;};
			startTimer();
		}
		
   ]]></script>
    <style type="text/css">
        text {
			font-family: arial, sans-serif; 
			font-size: 10px; 
			font-weight: bold; 
			fill: #444545; 
			text-anchor: middle;}
		#dial text:hover {
			cursor: pointer; 
			fill: #c83519;}
		.hand {
			fill: #c83519;}
		.background {
			fill: white;}
		#restart, #logo {
			font-size:3px; 
			font-weight:normal;
			opacity:0.4}
		.tickRegion {stroke:  #444545}
		.tickRegion:hover polygon{
			cursor: pointer; 
			fill:lightpink; 
			stroke-width:0;
			opacity:100}
		.fiveMinTick {stroke-width: 1}
		.oneMinTick {stroke-width: 0.5;}
	</style>
	<defs>
		<polygon id="clickArea" points="50,10 54.2,10.2 52.4,27.2 50,27" opacity="0">		
			<title>zum Starten klicke auf die gew&#252;nschte Minute (wird in Firefox nicht als Hint angezeigt)</title>
		</polygon>
		<g id="5minTick" class="tickRegion" onclick="startTimerOn1(evt)">
			<use xlink:href="#clickArea"/>
			<line id="5minTick" class="fiveMinTick" x1="50" y1="10" x2="50" y2="27"/>
		</g>
		<g id="1minTick" class="tickRegion" onclick="startTimerOn1(evt)">
			<use xlink:href="#clickArea"/>
			<line class="oneMinTick" x1="50" y1="10" x2="50" y2="15"/>
		</g>
   </defs>
   <clipPath id="handanimation">
     <rect x="0" y="0" width="50" height="100">
        <animateTransform id="secondhalf" attributeName="transform" type="rotate" begin="firsthalf.end" dur="30min" from="0 50 50" to="180 50 50" fill="freeze" />
	 </rect>
     <rect x="50" y="0" width="50" height="100">
        <animateTransform id="firsthalf" attributeName="transform" type="rotate" begin="0s" dur="30min" from="0 50 50" to="180 50 50" fill="freeze" />
	    <set attributeName="visibility" to="hidden" begin="secondhalf.begin"/> 
	 </rect>
   </clipPath>
   <g id="hand">
	   <circle class="hand" cx="50" cy="50" r="40" clip-path="url(#handanimation)">
			<set attributeName="visibility" to="hidden" begin="secondhalf.end"/>
		</circle>
	   <rect class="background" x="50" y="0" width="50" height="100" visibility="hidden">
		  <set attributeName="visibility" to="visible" begin="secondhalf.begin"/>
	   </rect>
   </g>
   <g id="dial">
       <g><g id="15minSegment">
			<g><g id="5minSegment">
				<use xlink:href="#5minTick">5</use>
				<use xlink:href="#1minTick" transform="rotate(6, 50, 50)">4</use>
				<use xlink:href="#1minTick" transform="rotate(12, 50, 50)">3</use>
				<use xlink:href="#1minTick" transform="rotate(18, 50, 50)">2</use>
				<use xlink:href="#1minTick" transform="rotate(24, 50, 50)">1</use>
			</g>10</g>
			<use xlink:href="#5minSegment" transform="rotate(30, 50, 50)">5</use>
			<use xlink:href="#5minSegment" transform="rotate(60, 50, 50)">0</use>
		</g>45</g>
		<use xlink:href="#15minSegment" transform="rotate(90, 50, 50)">30</use>
		<use xlink:href="#15minSegment" transform="rotate(180, 50, 50)">15</use>
		<use xlink:href="#15minSegment" transform="rotate(270, 50, 50)">0</use>
		<g id="numbers" onclick="startTimerOn(evt)">
			<title>zum Starten klicke auf die gew&#252;nschte Minute</title>
			<text x="50" y="9" >0</text>
			<text x="72" y="14">55</text>
			<text x="90" y="30">50</text>
			<text x="96" y="54">45</text>
			<text x="90" y="76">40</text>
			<text x="72.5" y="94">35</text>
			<text x="50" y="98">30</text>
			<text x="25" y="94">25</text>
			<text x="10" y="76">20</text>
			<text x="4"  y="54">15</text>
			<text x="10" y="30">10</text>
			<text x="26" y="15">5</text>
		</g>
   </g>
   <text id="logo" x="50" y="49" width="100%">oose.</text>
   <text id="restart" x="50" y="60" width="100%" visibility="hidden">
		Start durch Klick auf Minuten
		<set attributeName="visibility" from="hidden" to="visible" begin="secondhalf.end"/>
   </text>
</svg>